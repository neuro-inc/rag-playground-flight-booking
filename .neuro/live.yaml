kind: live
title: playground flight booking

defaults:
  life_span: 5d

volumes:
  ollama_models:
    remote: storage:$[[ flow.project_id ]]/ollama_models
    mount: /root/.ollama
    local: models
  pgdata:
    remote: storage:$[[ flow.project_id ]]/pgdata
    mount: /var/lib/postgresql/data
    local: pgdata
  docs:
    remote: storage:$[[ flow.project_id ]]/docs
    mount: /usr/src/app/docs
    local: docs
    read_only: true

images:
  pfb:
    ref: image:$[[ project.id ]]:v1
    dockerfile: $[[ flow.workspace ]]/Dockerfile
    context: $[[ flow.workspace ]]/
    build_preset: cpu-large

jobs:
  pfb:
    image: ${{ images.pfb.ref }}
    name: pfb
    preset: cpu-small
    http_port: "8080"
    # detach: true
    browse: true
    env:
      OLLAMA_API_BASE: http://${{ inspect_job('ollama').internal_hostname_named }}:11434
      POSTGRES_HOST: ${{ inspect_job('pgvector').internal_hostname_named }}
    volumes:
#      - ${{ volumes.docs.ref_ro }}
      - ${{ upload(volumes.docs).ref_ro }} #if docs change a lot, and we want to avoid custom upload each time
#    entrypoint: "bash" #to enter container bash

  ollama:
    image: ollama/ollama
    volumes:
      - ${{ volumes.ollama_models.ref_rw }}
    preset: a100x2
    detach: true
    env:
      MODEL: "llama3.2:3b"
    http_port: "11434"
    entrypoint: "bash -c 'ollama serve & sleep 10 && ollama pull ${MODEL} && sleep infinity'"

  pgvector:
      image: pgvector/pgvector:pg16
      detach: true
      preset: cpu-small
      env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          PGDATA: ${{ volumes.pgdata.mount }}/pgdata
      volumes:
          - ${{ volumes.pgdata.ref_rw }}
